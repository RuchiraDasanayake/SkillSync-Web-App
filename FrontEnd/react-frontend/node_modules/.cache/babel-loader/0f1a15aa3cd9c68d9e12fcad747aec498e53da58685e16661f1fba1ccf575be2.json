{"ast":null,"code":"var _jsxFileName = \"D:\\\\SLIIIT\\\\2ndYear2ndSemester\\\\ITP coding\\\\SkillSync_ITP\\\\FrontEnd\\\\react-frontend\\\\src\\\\layouts\\\\FreelancerWorkManagement\\\\GigManagement\\\\Components\\\\CreateGigForm2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateGigForm2 = () => {\n  _s();\n  const history = useHistory();\n  const {\n    gigId\n  } = useParams();\n  const [imageFiles, setImageFiles] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (let i = 0; i < imageFiles.length; i++) {\n      formData.append('files', imageFiles[i]); // Change 'file' to 'files'\n    }\n    try {\n      const response = await axios.post(`http://localhost:8082/freelancer-gigs/${gigId}/gig-images/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Images uploaded successfully:', response.data);\n      handleNextClick(gigId);\n    } catch (error) {\n      console.error('Error uploading images:', error);\n      window.alert('At least one image should be uploaded');\n    }\n  };\n  const handleImageChange = (e, index) => {\n    const file = e.target.files && e.target.files[0];\n    if (file) {\n      // Update imageFiles state with selected file\n      setImageFiles(prevState => {\n        const newImageFiles = [...prevState];\n        newImageFiles[index] = file;\n        return newImageFiles;\n      });\n    }\n  };\n  const handleNextClick = gigId => {\n    history.push(`/CreateGigForm3/${gigId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"containerGigCreate\",\n      style: {\n        maxWidth: '900px',\n        maxHeight: '900px',\n        marginTop: '150px',\n        marginBottom: '210px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        style: {\n          color: 'red'\n        },\n        children: \"Upload Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"row g-3\",\n        children: [[...Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `image${index}`,\n              className: \"form-label\",\n              id: \"formLabelGigCreate\",\n              children: [\"Upload Image \", index + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"form-control\",\n              id: `image${index}`,\n              onChange: e => handleImageChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-lg\",\n            id: \"btnPrimaryGigCreate\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateGigForm2, \"joVPmUk2MVzpGGgoWgIP2VgAofs=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = CreateGigForm2;\nexport default CreateGigForm2;\nvar _c;\n$RefreshReg$(_c, \"CreateGigForm2\");","map":{"version":3,"names":["React","useState","axios","useHistory","useParams","jsxDEV","_jsxDEV","CreateGigForm2","_s","history","gigId","imageFiles","setImageFiles","handleSubmit","e","preventDefault","formData","FormData","i","length","append","response","post","headers","console","log","data","handleNextClick","error","window","alert","handleImageChange","index","file","target","files","prevState","newImageFiles","push","className","children","id","style","maxWidth","maxHeight","marginTop","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Array","map","_","htmlFor","type","onChange","_c","$RefreshReg$"],"sources":["D:/SLIIIT/2ndYear2ndSemester/ITP coding/SkillSync_ITP/FrontEnd/react-frontend/src/layouts/FreelancerWorkManagement/GigManagement/Components/CreateGigForm2.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst CreateGigForm2: React.FC = () => {\r\n\r\n    const history = useHistory();\r\n    const { gigId } = useParams<{ gigId: string }>();\r\n    const [imageFiles, setImageFiles] = useState<File[]>([]);\r\n\r\n    const handleSubmit = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n    \r\n        const formData = new FormData();\r\n        for (let i = 0; i < imageFiles.length; i++) {\r\n            formData.append('files', imageFiles[i]); // Change 'file' to 'files'\r\n        }\r\n    \r\n        try {\r\n            const response = await axios.post(`http://localhost:8082/freelancer-gigs/${gigId}/gig-images/upload`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            console.log('Images uploaded successfully:', response.data);\r\n            handleNextClick(gigId);\r\n    \r\n        } catch (error) {\r\n            console.error('Error uploading images:', error);\r\n            window.alert('At least one image should be uploaded')\r\n        }\r\n    };\r\n    \r\n    \r\n    const handleImageChange = (e: ChangeEvent<HTMLInputElement>, index: number) => {\r\n        const file = e.target.files && e.target.files[0];\r\n        if (file) {\r\n            // Update imageFiles state with selected file\r\n            setImageFiles(prevState => {\r\n                const newImageFiles = [...prevState];\r\n                newImageFiles[index] = file;\r\n                return newImageFiles;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleNextClick = (gigId: string) => {\r\n        history.push(`/CreateGigForm3/${gigId}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n        <div className=\"container\" id=\"containerGigCreate\" style={{ maxWidth: '900px', maxHeight: '900px', marginTop: '150px', marginBottom: '210px' }}>\r\n            <h2 className=\"text-center mb-4\" style={{ color: 'red' }}>Upload Images</h2>\r\n            <form onSubmit={handleSubmit} className=\"row g-3\">\r\n                {[...Array(6)].map((_, index) => (\r\n                    <div key={index} className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor={`image${index}`} className=\"form-label\" id=\"formLabelGigCreate\">Upload Image {index + 1}:</label>\r\n                            <input type=\"file\" className=\"form-control\" id={`image${index}`} onChange={(e) => handleImageChange(e, index)} />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <div className=\"col-12\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\" id=\"btnPrimaryGigCreate\">Next</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateGigForm2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}