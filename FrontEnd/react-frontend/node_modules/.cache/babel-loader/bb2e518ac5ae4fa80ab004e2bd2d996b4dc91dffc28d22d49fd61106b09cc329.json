{"ast":null,"code":"var _jsxFileName = \"D:\\\\my works\\\\git\\\\FrontEnd\\\\react-frontend\\\\src\\\\layouts\\\\admin task management and public notices\\\\SearchNotices\\\\SearchNoticesPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { SpinnerLoading } from \"../../../utils/SpinnerLoading\";\nimport axios from \"axios\";\nimport { SearchBook } from \"./Components/SearchNotices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchNoticesPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isloading, setIsloading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchurl, setSearchurl] = useState('');\n  const [totalNumberOfElements, setTotalNumberOfElements] = useState(0);\n  let response;\n  let url = '';\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchurl === '') {\n        url = `http://localhost:8082/notices/search?title=&description=&`;\n      } else {\n        url = searchurl;\n      }\n      try {\n        response = await axios.get(url);\n      } catch (error) {\n        throw new Error(\"Error in fetching data\");\n      }\n      const responsedata = response.data.content;\n      setTotalNumberOfElements(response.data.numberOfElements);\n      console.log(response.data.numberOfElements);\n      const loadedNotices = [];\n      for (const element in responsedata) {\n        loadedNotices.push({\n          id: responsedata[element].id,\n          title: responsedata[element].title,\n          description: responsedata[element].description,\n          audience: responsedata[element].audience,\n          datecreated: responsedata[element].datecreated,\n          lastupdated: responsedata[element].lastupdated,\n          moreDetailsLink: responsedata[element].moreDetailsLink\n        });\n      }\n      setData(loadedNotices);\n      setIsloading(false);\n    };\n    fetchData().catch(error => {\n      setError(error.message);\n    });\n  }, [searchTerm, searchurl]);\n  if (isloading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n  const searchHandleChange = () => {\n    setCurrentPage(1);\n    console.log(\"search term is: \" + searchTerm);\n    if (searchTerm === '') {\n      setSearchurl('');\n    } else {\n      setSearchurl(`http://localhost:8082/notices/search?title=${searchTerm}&description=${searchTerm}`);\n    }\n  };\n  const serachTermHandler = props => {\n    console.log(\"search term is: \" + props);\n    const sanitizedInput = props.replace(/[^a-zA-Z0-9\\s]/g, '');\n    console.log(\"sanitized input is: \" + sanitizedInput);\n    if (sanitizedInput === '') {\n      setSearchTerm('errorsearchterm');\n    } else {\n      setSearchTerm(sanitizedInput);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control me-2\",\n              type: \"search\",\n              placeholder: \"Search\",\n              \"aria-label\": \"search\",\n              onChange: e => serachTermHandler(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-success\",\n              onClick: () => searchHandleChange(),\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Number of Results:(\", totalNumberOfElements, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), data.map(element => /*#__PURE__*/_jsxDEV(SearchBook, {\n          notice: element\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchNoticesPage, \"QDB6R6SR5TGGbbhJj8ztIJ4xkfc=\");\n_c = SearchNoticesPage;\nvar _c;\n$RefreshReg$(_c, \"SearchNoticesPage\");","map":{"version":3,"names":["useEffect","useState","SpinnerLoading","axios","SearchBook","jsxDEV","_jsxDEV","SearchNoticesPage","_s","data","setData","error","setError","isloading","setIsloading","currentPage","setCurrentPage","searchTerm","setSearchTerm","searchurl","setSearchurl","totalNumberOfElements","setTotalNumberOfElements","response","url","fetchData","get","Error","responsedata","content","numberOfElements","console","log","loadedNotices","element","push","id","title","description","audience","datecreated","lastupdated","moreDetailsLink","catch","message","fileName","_jsxFileName","lineNumber","columnNumber","className","children","searchHandleChange","serachTermHandler","props","sanitizedInput","replace","type","placeholder","onChange","e","target","value","onClick","map","notice","_c","$RefreshReg$"],"sources":["D:/my works/git/FrontEnd/react-frontend/src/layouts/admin task management and public notices/SearchNotices/SearchNoticesPage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport PublicNoticesModel from \"../../../Model/publicNoticesModel\";\r\nimport { SpinnerLoading } from \"../../../utils/SpinnerLoading\";\r\nimport axios from \"axios\";\r\nimport { SearchBook } from \"./Components/SearchNotices\";\r\n\r\nexport const SearchNoticesPage = () => {\r\n\r\n    const [data, setData] = useState<PublicNoticesModel[]>([]);\r\n    const [error, setError] = useState(null);\r\n    const [isloading, setIsloading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchurl, setSearchurl] = useState('');\r\n    const [totalNumberOfElements, setTotalNumberOfElements] = useState(0);\r\n    let response;\r\n    let url: string = '';\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => { \r\n\r\n            if (searchurl === '') {\r\n                url = `http://localhost:8082/notices/search?title=&description=&`;\r\n            } else {\r\n                url = searchurl;\r\n            }\r\n\r\n\r\n            try {\r\n                response = await axios.get(url);\r\n            } catch (error) {\r\n                throw new Error(\"Error in fetching data\");\r\n            }\r\n\r\n            const responsedata = response.data.content;\r\n            setTotalNumberOfElements(response.data.numberOfElements)\r\n            console.log(response.data.numberOfElements);\r\n\r\n            const loadedNotices: PublicNoticesModel[] = [];\r\n            for (const element in responsedata) {\r\n                loadedNotices.push({\r\n                    id: responsedata[element].id,\r\n                    title: responsedata[element].title,\r\n                    description: responsedata[element].description,\r\n                    audience: responsedata[element].audience,\r\n                    datecreated: responsedata[element].datecreated,\r\n                    lastupdated: responsedata[element].lastupdated,\r\n                    moreDetailsLink: responsedata[element].moreDetailsLink\r\n                });\r\n            }\r\n\r\n            setData(loadedNotices);\r\n            setIsloading(false);\r\n        };\r\n\r\n        fetchData().catch(\r\n            (error) => {\r\n                setError(error.message)\r\n            }\r\n        )\r\n    }, [searchTerm, searchurl]);\r\n\r\n    if (isloading) {\r\n        return (\r\n            <SpinnerLoading />\r\n        );\r\n    }\r\n    if (error) {\r\n        return (\r\n            <div className=\"container m-5\">\r\n                <p>{error}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const searchHandleChange = () => {\r\n        setCurrentPage(1);\r\n        console.log(\"search term is: \" + searchTerm);\r\n        if (searchTerm === '') {\r\n\r\n            setSearchurl('');\r\n        } else {\r\n            setSearchurl(`http://localhost:8082/notices/search?title=${searchTerm}&description=${searchTerm}`);\r\n        }\r\n    };\r\n\r\n    const serachTermHandler = (props:any) => {\r\n        console.log(\"search term is: \" + props);\r\n        const sanitizedInput = props.replace(/[^a-zA-Z0-9\\s]/g, '');\r\n        console.log(\"sanitized input is: \" + sanitizedInput);\r\n        if(sanitizedInput === ''){\r\n            setSearchTerm('errorsearchterm');\r\n        }else{\r\n            setSearchTerm(sanitizedInput);\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"search\"\r\n                                onChange={e => serachTermHandler(e.target.value)}\r\n                            />\r\n                            <button className=\"btn btn-outline-success\"\r\n                                onClick={() => searchHandleChange()}\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <h5>Number of Results:({totalNumberOfElements})</h5>\r\n                    </div>\r\n                            {data.map(element => (\r\n                                <SearchBook notice={element} key={element.id} />\r\n                            ))}\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}